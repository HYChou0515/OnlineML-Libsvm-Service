buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

group 'io.hychou'
version '0.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'http://repo1.maven.org/maven2' }
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    //For gradle 4.6 and later    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    // Business Dependencies
    compile group: 'tw.edu.ntu.csie', name: 'libsvm', version: '3.17'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination file("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['io/hychou/*.class',
                                        'io/hychou/common/*', ])
        })
    }
}

test {
    afterTest {desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    jacoco {
        append = false
        destinationFile = file("${buildDir}/jacoco/jacocoTest.exec")
        classDumpDir = file("${buildDir}/jacoco/classpathdumps")
    }
    finalizedBy jacocoTestReport
}
